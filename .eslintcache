[{"F:\\todo-list\\src\\index.js":"1","F:\\todo-list\\src\\App.js":"2","F:\\todo-list\\src\\components\\Todo.js":"3"},{"size":221,"mtime":1608127762653,"results":"4","hashOfConfig":"5"},{"size":167,"mtime":1608127726294,"results":"6","hashOfConfig":"5"},{"size":3901,"mtime":1608244571937,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1osvjhb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"F:\\todo-list\\src\\index.js",[],["16","17"],"F:\\todo-list\\src\\App.js",[],"F:\\todo-list\\src\\components\\Todo.js",["18"],"import React, { useState, useEffect } from 'react';\r\nimport './Todo.css';\r\n\r\n\r\nfunction Task({ task, index, completeTask, removeTask }) {\r\n    return (\r\n        <div\r\n            className=\"task\"\r\n            style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}\r\n        >\r\n            {task.title} \r\n           \r\n           <div className=\"prority\"> {task.priority}</div>\r\n\r\n            <button className=\"cross\" onClick={() => removeTask(index)}>x</button>\r\n            <button  className=\"btn\" onClick={() => completeTask(index)}>Complete</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CreateTask({ addTask, addCategory }) {\r\n    const [value, setValue] = useState(\"\");\r\n    const [category, setCategory] =useState(\"High\");\r\n    \r\n\r\n    const AddTask = e => {\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        addTask(value,category );\r\n       \r\n        setValue(\"\");\r\n        setCategory(category)   \r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={value}\r\n                placeholder=\"Add a new task\"\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n            <select\r\n            className=\"select\"\r\n            name=\"category\" value={category}\r\n             onChange={e => setCategory(e.target.value)}>\r\n            <option id=\"0\" >High</option>\r\n            <option id=\"1\" >Medium</option>\r\n            <option id=\"2\" >Low</option>\r\n        </select>\r\n           \r\n        <button className=\"add-btn\" onClick={AddTask}>\r\n        ADD\r\n      </button>\r\n\r\n                   </div>\r\n    );\r\n}\r\n\r\nfunction Todo() {\r\n    var ind= ['High','Medium','Low'];\r\n    const [tasksRemaining, setTasksRemaining] = useState(0);\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            title: \"Plan projects\",\r\n            priority: \"High\",\r\n            completed: false\r\n        },\r\n        {\r\n            title: \"Assign tasks\",\r\n            priority: \"Medium\",\r\n            completed: false\r\n        },\r\n        {\r\n            title: \"Track project timeline\",\r\n            priority: \"Low\",\r\n            completed: false\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n         setTasksRemaining(tasks.filter(task => !task.completed).length) \r\n        },[]);\r\n\r\n\r\n    const addTask = (title,priority) => {\r\n        const newTasks = [...tasks, { title, priority, completed: false }];\r\n        setTasks(newTasks);\r\n    };\r\n\r\n        const completeTask = index => {\r\n        const newTasks = [...tasks];\r\n        newTasks[index].completed = true;\r\n        setTasks(newTasks);\r\n    };\r\n\r\n    const removeTask = index => {\r\n        const newTasks = [...tasks];\r\n        newTasks.splice(index, 1);\r\n        setTasks(newTasks);\r\n    };\r\n\r\n    const sortByPriority = () =>{\r\n              var sorted = tasks.sort((a,b) => { \r\n           return ind.indexOf(a.priority) - ind.indexOf(b.priority)\r\n               })\r\n       console.log(sorted)\r\n       setTasks(sorted)\r\n     \r\n\r\n    }\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <div className=\"header\">Pending tasks ({tasksRemaining})</div>\r\n            <div>\r\n            <button className=\"sort\" onClick={() => sortByPriority()}>Sort based on Priority</button></div>\r\n            <div className=\"tasks\">\r\n                {tasks.map((task, index) => (\r\n                    <Task\r\n                    task={task}\r\n                    index={index}\r\n                    completeTask={completeTask}\r\n                    removeTask={removeTask}\r\n                     sorted={sortByPriority}\r\n                    key={index}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div className=\"create-task\" >\r\n                <CreateTask addTask={addTask} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":87,"column":11,"nodeType":"25","endLine":87,"endColumn":13,"suggestions":"26"},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tasks'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTasksRemaining' needs the current value of 'tasks'.","ArrayExpression",["29"],"no-global-assign","no-unsafe-negation",{"desc":"30","fix":"31"},"Update the dependencies array to be: [tasks]",{"range":"32","text":"33"},[2340,2342],"[tasks]"]